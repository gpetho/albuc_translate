import re


def clean_arabic(text):
    # This is a stub generated by ChatGPT, there is no guarantee it will work as expected.
    # Please verify and modify it if needed.

    # Remove diacritics (Arabic vowel marks)
    text = re.sub(r'[\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E8\u06EA-\u06ED]', '', text)

    # Remove punctuation and non-essential symbols
    text = re.sub(r'[^\w\u0600-\u06FF]', '', text)

    # Remove whitespace
    text = re.sub(r'\s+', '', text)

    return text


def process_text_file(file_path):
    """
    Process a text file containing Arabic text and English translations.
    Returns the header (first line), list of Arabic lines, and list of English translations.
    """
    arabic_lines = []
    english_lines = []
    
    with open(file_path, 'r', encoding='utf-8') as file:
        # Read and store the first line (header)
        lines = file.read()

        line_pairs = re.split(r'\n\n+', lines)

        for lp in line_pairs:
            try:
                ara, eng = lp.split('\n')
            except ValueError:
                continue
            arabic_lines.append(ara)
            english_lines.append(eng)
        
    return arabic_lines, english_lines

# Example usage
if __name__ == "__main__":
    try:
        file_path = "Albucasis_Chirurgia_ar_sentences.txt"
        arabic, english = process_text_file(file_path)

        print("Arabic length:", len(" ".join(arabic)))
        print("Clean Arabic length:", len(clean_arabic("".join(arabic))))

        print(len(arabic), len(english))
            
    except FileNotFoundError:
        print("Error: File not found")
    except Exception as e:
        print(f"Error processing file: {e}")